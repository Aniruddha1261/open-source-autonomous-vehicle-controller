import{_ as e,o as t,c as o,V as a}from"./chunks/framework.5c100d06.js";const s="/open-source-autonomous-vehicle-controller/assets/1.872863be.jpg",y=JSON.parse('{"title":"Building Your First Project","description":"","frontmatter":{},"headers":[],"relativePath":"project.md","filePath":"project.md"}'),n={name:"project.md"},r=a('<h1 id="building-your-first-project" tabindex="-1">Building Your First Project <a class="header-anchor" href="#building-your-first-project" aria-label="Permalink to &quot;Building Your First Project&quot;">​</a></h1><h2 id="cloning-the-repository" tabindex="-1">Cloning the Repository <a class="header-anchor" href="#cloning-the-repository" aria-label="Permalink to &quot;Cloning the Repository&quot;">​</a></h2><p>To clone the Repo just execute the following command on Gitbash or your terminal prompt. We are making the project folder in Desktop you can clone it into directory you want. Navigate to your desired directory</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Desktop</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/uccross/open-source-autonomous-vehicle-controller</span></span></code></pre></div><p>Now navigate to the modules directory in the Cloned Repo</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">open-source-autonomous-vehicle-controller/modules</span></span></code></pre></div><p>Clone the submodules in this directory</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">submodule</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/mavlink/c_library_v2</span></span></code></pre></div><h2 id="setting-up-hardware" tabindex="-1">Setting up Hardware <a class="header-anchor" href="#setting-up-hardware" aria-label="Permalink to &quot;Setting up Hardware&quot;">​</a></h2><p><img class="padding" width="650" height="650" src="'+s+'"></p><h2 id="setting-up-the-mplab-x" tabindex="-1">Setting up the MPLAB X <a class="header-anchor" href="#setting-up-the-mplab-x" aria-label="Permalink to &quot;Setting up the MPLAB X&quot;">​</a></h2><p>File -&gt; Open Project -&gt; open-source-autonomous-vehicle-controller -&gt; lib -&gt; Serial.X</p><p>Open Serial.X Project Properties (File -&gt; Project Properties)</p><p>Choose Connected Hardware Tool to PICkit3</p><p>Navigate to xc32-ld -&gt; choose General as the option category -&gt; set the Heap Size (bytes) to be 8000 bytes</p><p>Click OK to save the modified Project Properties</p><p>Running SerialM32.c</p><p>Click Clean and Build</p><p>Click Debug Project</p><p>Open a serial port terminal app (CoolTerm for Mac, PuTTY for Windows)</p><p>Output should be:</p><p>Try typing something and press Enter</p><p>What you type should now stay in the serial terminal</p>',24),l=[r];function p(i,c,h,d,u,g){return t(),o("div",null,l)}const b=e(n,[["render",p]]);export{y as __pageData,b as default};
